[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Measuring and Assessing Open Source Project Impact and Community Health",
    "section": "",
    "text": "Open source software (OSS) projects are increasingly interested in tracking the impact of their packages and the health of their communities. The motivation to measure these attributes comes from both internal needs and external demands: Internally, project leaders use these measurements to set development roadmaps, make strategic decisions about resource allocation, and ensure that they are providing a welcoming, productive environment for contributors and users. Externally, projects use impact and health measurements to raise funds, report to funders, market their tools, and support career development for people who have contributed."
  },
  {
    "objectID": "index.html#background",
    "href": "index.html#background",
    "title": "Measuring and Assessing Open Source Project Impact and Community Health",
    "section": "",
    "text": "Open source software (OSS) projects are increasingly interested in tracking the impact of their packages and the health of their communities. The motivation to measure these attributes comes from both internal needs and external demands: Internally, project leaders use these measurements to set development roadmaps, make strategic decisions about resource allocation, and ensure that they are providing a welcoming, productive environment for contributors and users. Externally, projects use impact and health measurements to raise funds, report to funders, market their tools, and support career development for people who have contributed."
  },
  {
    "objectID": "index.html#oss-project-impact",
    "href": "index.html#oss-project-impact",
    "title": "Measuring and Assessing Open Source Project Impact and Community Health",
    "section": "OSS Project Impact",
    "text": "OSS Project Impact\nProjects define and measure impact in a number of ways. In scientific OSS, impact is often defined as the intensity of usage in a given discipline: How much of the field and its work relies on scientists using the software? How critical is the software to advancing science in the domain? What other OSS projects depend on the software? What kinds of breakthroughs does the software enable that other options do not? Accordingly,\nProjects tend to measure impact in a number of ways, most of which do not adequately answer the questions proposed above. The following activities instead act as rough proxies for assessing impact, often because they involve metrics that are easy to extract from open source tools:\n\nRecording package download counts\n\nTracking citations in the scientific literature\n\nMonitoring downstream uses of the software (e.g., dependencies)\n\nCounting GitHub stars\n\nQuantifying engagement at in-person and online events\n\nAssessing interest from institutions, science and computing facilities, and industry partners in supporting software on their systems\n\nMeasuring changes in the number of contributors or contributions\n\nCalculating past funding support and projecting future support needs\n\nThe above metrics can be useful as a starting point in assessing interest in and usage of software. But as pointed out in a 2015 blog post by Daniel S. Katz, the most difficult metrics to track often offer the most value when compared to easier-to-track metrics. Download counts, for example, are easy to record, but those counts tell us little about how the software is being used to advance science or any other goal. Tracking citations (and chains of citations) in scientific papers can be labor-intensive (particularly when examining what the authors used the software for) yet the activity paints a much clearer picture of actual usage and impact.\nIn the ideal scenario, then, projects would be able to track usage at a more detailed level and address critical questions, such as those in the table below. For each question, we have proposed possible metrics (or information-gathering activities) that might help provide a detailed view of impact. More work is certainly needed to identify other existing ways to answer these questions and to build new approaches to impact assessment.\n\n\n\n\n\n\n\nImpact Question\nPossible Metrics\n\n\n\n\nWhat fraction of the field relies on the software to carry out its work?\nCitations to the software in published papers Citations of papers citing the software\n\n\nWhat breakthroughs has the software enabled?\nLiterature reviews of papers citing the software Case studies of software-enabled breakthroughs\n\n\nWhat value have users, contributors, maintainers, and other stakeholders received from the software (e.g., better work, advancing skills and careers, or finding community and support)?\nQualitative interviews with the software community Surveys and skills assessments Soliciting testimonials Tracking career progression Social network analyses\n\n\nDo other projects depend on this software?\nDependency graphs"
  },
  {
    "objectID": "index.html#oss-project-community-health",
    "href": "index.html#oss-project-community-health",
    "title": "Measuring and Assessing Open Source Project Impact and Community Health",
    "section": "OSS Project Community Health",
    "text": "OSS Project Community Health\nCommunity health is somewhat more abstract and subjective than impact, making it difficult to define and measure. If we were to strive for a general definition of community health, it would likely include the degree of psychological safety1 in a software community, the level of diversity in community members’ backgrounds and characteristics, the inclusiveness of the community, activity levels (e.g., active raising and closing of issues, traffic on communication forums, attendance at events), and the formalization of pathways in the community (e.g., contributor and developer on-ramps, leadership opportunities). Although these attributes are perhaps less quantifiable than impact, projects often take the following steps to measure community health:\n1 Psychological safety as we’re using it here means broadly that people feel they can voice their opinions, ideas, and concerns without negative consequences or repercussions. Psychologically safe environments tend to promote open communication, collaboration, learning and innovation and can support constructive disagreement, feedback culture and taking risks for growth and improvement.\nAssessing the diversity of the community via surveys\n\nTracking the number of users, contributors, and developers/maintainers over time\n\nGauging churn and turnover\n\nQuantifying the number of issues raised and closed\n\nCounting attendees at meetings and surveying attendees about their experience\n\nConducting interviews with community members about their experiences\n\nThe above description and measurements of community health apply broadly to open source projects (and likely any community), but research/scientific software projects may have contextual differences that require alternative or additional description and measurement. We could, for example, assess:\n\nThe degree to which scientists in a given field benefit similarly from the software (i.e., is the community excluding some members of the discipline)?\n\nThe effects of “competitors” and the project’s relationship to them, including:\n\nProprietary/commercial software vendors\n\nOther open source projects\n\n\nThe degree of support the project receives from the research/science community, including:\n\nFinancial support\n\nDevelopment and maintenance\n\n\nUse of the software in scientific education"
  },
  {
    "objectID": "index.html#the-relationship-between-software-impact-and-community-health",
    "href": "index.html#the-relationship-between-software-impact-and-community-health",
    "title": "Measuring and Assessing Open Source Project Impact and Community Health",
    "section": "The Relationship between Software Impact and Community Health",
    "text": "The Relationship between Software Impact and Community Health\nImpact and health overlap in both definition and measurement. Activity levels such as contributions or engagement on communication forums, for example, can signal that a project has both significant uptake and a welcoming atmosphere (especially when there is a steady increase in new contributors and/or a low rate of churn). It is therefore useful to map impact and health onto one another and consider the characteristics of projects that have either Broad or Narrow Impact and either Low Community Health or High Community Health.\n**Characteristics of Projects by Impact and Health\n\n\n\n\n\n\n\n\n\nLow Community Health\nHigh Community Health\n\n\n\n\nBroad Impact\nThis project is used broadly, but the community is troubled. Characteristics: Critical in one or more ecosystems Difficult to maintain due to low community engagement Few newcomers\nThis project is the “ideal” - it is both critical to software ecosystems and has an active, engaged, welcoming community. Characteristics: Critical in one or more ecosystems Welcoming environment Formalized on-boarding processes Contains supportive materials such as contributor guides, Codes of Conduct\n\n\nNarrow Impact\nThis project is targeted toward a small, niche community or is a “pet project.” Leaders and developer(s) are not necessarily responsive to a wider community. Characteristics: Used for niche scientific work Decisions are made by one or a small group of people with few formalized decision-making processes Newcomers are not recruited or actively welcomed\nThis project has a strong community, but the software has limited impact. Community members remain engaged due to a sense of belonging, networking, and skill-building. Characteristics: Software development is secondary to community-building efforts Issues, forums, and communication channels discuss community needs more than software development needs May have issues with sustainability"
  },
  {
    "objectID": "index.html#the-relationship-between-impact-health-and-sustainability",
    "href": "index.html#the-relationship-between-impact-health-and-sustainability",
    "title": "Measuring and Assessing Open Source Project Impact and Community Health",
    "section": "The Relationship between Impact, Health, and Sustainability",
    "text": "The Relationship between Impact, Health, and Sustainability\nSoftware projects of the above quadrants can be sustained. For example, low-health broad-impact projects may survive many years on the strength of one or a few dedicated maintainers, as long as maintenance burden is kept low (e.g., by rejecting most feature enhancement requests, providing limited user support, etc). However, sustainability as a forward-looking property is a forecast, where a number of factors such as elements of impact and community health can be combined into a probabilistic measure of sustainability. Another way of looking at this is that software sustainability is a measure of the software project’s ability to survive challenge events that each have some chance of happening, such as the main developer leaving the project, a funding grant ending, etc. (see Towards Defining Lifecycles and Categories of Research Software), and that there is some set of likelihoods of the project surviving each such event. [note to contributors: more needed here!]"
  },
  {
    "objectID": "index.html#general-questions-for-discussion",
    "href": "index.html#general-questions-for-discussion",
    "title": "Measuring and Assessing Open Source Project Impact and Community Health",
    "section": "General Questions for Discussion",
    "text": "General Questions for Discussion\n\nHow do you move from low community health to high community health?\n\nHow do you move from narrow impact to broad impact?\n\nHow can we enable projects to preserve the “small-and-mighty,” innovative spirit while maximizing impact?\n\nSmall science teams drive innovations that enable big science organizations to have impact. Relevant reference: Ed Yong’s “Small Teams of Scientists Have Fresher Ideas”\n\nIn other words, a project could have a narrow impact as its stated vision (at first or in the long-term), and that can be a very good thing."
  },
  {
    "objectID": "index.html#questions-for-discussion-in-your-projects-community",
    "href": "index.html#questions-for-discussion-in-your-projects-community",
    "title": "Measuring and Assessing Open Source Project Impact and Community Health",
    "section": "Questions for Discussion in Your Project’s Community",
    "text": "Questions for Discussion in Your Project’s Community\n\nWhat is our desired impact?\n\nHow has it changed?\n\nHow can we continually reevaluate our desired impact?\n\n\nHow are we currently tracking impact and health, if at all?\n\nWhat is our process for interpreting quantitative data, especially when data collection is automated?\n\nHow can we supplement our quantified measures with qualitative data?\n\nWho needs to be at the table when assessing these data?"
  },
  {
    "objectID": "index.html#resources-on-metrics",
    "href": "index.html#resources-on-metrics",
    "title": "Measuring and Assessing Open Source Project Impact and Community Health",
    "section": "Resources on Metrics",
    "text": "Resources on Metrics\n\nCHAOSS - https://chaoss.community\n\nCode for Science and Society’s Tracking Impact and Measuring Success in Data Education Events\n\nPLoS Computational Biology’s Ten Simple Rules for Measuring the Impact of Workshops\n\nCSIRO’s organization-wide approach to impact assessment"
  },
  {
    "objectID": "CONTRIBUTING.html",
    "href": "CONTRIBUTING.html",
    "title": "Contributing",
    "section": "",
    "text": "This is a community open source project to gather and share wisdom from the CZI EOSS Community. Organizational Mycology works to faciltiate theses resources on behalf of the EOSS Community.\nWe are looking for contributions that add topics and enhance our resources for the benefit of other Open Source Leaders.\n\n\nBy contributing, you agree that we may redistribute your work under our license\nYou agree to abide by the CZI Community Participation Guidelines in this space.\n\n\n\nThe easiest way to get started is to file an issue to tell us about a spelling mistake, some awkward wording, or a factual error. This is a good way to introduce yourself and to meet some of our community members.\n\nIf you do not have a [GitHub][github] account, you can [send us comments by email][contact]. However, we will be able to respond more quickly if you use one of the other methods described below.\nIf you have a [GitHub][github] account, or are willing to [create one][github-join], but do not know how to use Git, you can report problems or suggest improvements by [creating an issue][issues]. This allows us to assign the item to someone and to respond to it in a threaded discussion.\nIf you are comfortable with Git, and would like to add or change material, you can submit a pull request (PR).\n\nThis contributor guide was adapted from that of Software Carpentry, The Carpentries"
  },
  {
    "objectID": "CONTRIBUTING.html#contributor-agreement",
    "href": "CONTRIBUTING.html#contributor-agreement",
    "title": "Contributing",
    "section": "",
    "text": "By contributing, you agree that we may redistribute your work under our license\nYou agree to abide by the CZI Community Participation Guidelines in this space."
  },
  {
    "objectID": "CONTRIBUTING.html#how-to-contribute-a-fix-or-suggested-change",
    "href": "CONTRIBUTING.html#how-to-contribute-a-fix-or-suggested-change",
    "title": "Contributing",
    "section": "",
    "text": "The easiest way to get started is to file an issue to tell us about a spelling mistake, some awkward wording, or a factual error. This is a good way to introduce yourself and to meet some of our community members.\n\nIf you do not have a [GitHub][github] account, you can [send us comments by email][contact]. However, we will be able to respond more quickly if you use one of the other methods described below.\nIf you have a [GitHub][github] account, or are willing to [create one][github-join], but do not know how to use Git, you can report problems or suggest improvements by [creating an issue][issues]. This allows us to assign the item to someone and to respond to it in a threaded discussion.\nIf you are comfortable with Git, and would like to add or change material, you can submit a pull request (PR).\n\nThis contributor guide was adapted from that of Software Carpentry, The Carpentries"
  }
]